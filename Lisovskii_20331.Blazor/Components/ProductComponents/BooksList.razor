@using Lisovskii_20331.Blazor.Services
@using Lsiovskii_20331.Domain.Entities
@implements IDisposable 
@rendermode InteractiveServer 
 
<h3>Книги</h3> 
@if(ProductService.Products!=null  
&& ProductService.Products.Count() != 0)
{
    <table class="table table-striped">
        <thead>
        <th>Название</th>
        <th></th>
            @foreach (var item in ProductService.Products)
            {
            <tr>
                <td>@item.Name</td>
                <td>
                    <button class="btn btn-outline-dark"
                            @onclick="@(()=>OnBookSelected(item.Id))">
                        Подробно
                    </button>
                </td>
            </tr>
            }
        </thead>
    </table>
}

@code {
    [CascadingParameter]
    public IProductService<Book> ProductService { get; set; }

    [Parameter]
    public EventCallback<int> BookSelected { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ProductService.ListChanged += StateHasChanged;
    }

    public async void OnBookSelected(int id)
    {
        await BookSelected.InvokeAsync(id);
    }

    public void Dispose()
    {
        ProductService.ListChanged -= StateHasChanged;
    }
}
